<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_speed = 8;
m_airSpeed = 6;
m_jumpForce = 16;
m_gForce = 0.75;
m_hangingUpSpeed = 4;
m_friction = 0.97;
m_waterFriction = 0.5;
m_maxHp = 99;

hp = m_maxHp;

state = st_idle; // Variavel que ira gerenciar o estado atual do personagem
scr_keys();      // Inicia as variáveis das teclas

inWater       = false;
hangingUp     = false;
jumpDirection = 0;

ySpeed = 0;
xSpeed = 0;
grav   = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Iniciação dos Scripts

dir = keyboard_check(key.right) - keyboard_check(key.left); // Direção na qual o jogador está tentando andar, onde 1 é direita, -1 é esquerda e 0 é nulo;
wantMove = abs(dir); // Variável booleana, que diz se o jogador quer mover o personagem ou não, pois precionando uma das teclas de movimento, os valores possíveis são 1 e -1, sendo que o absoluto destes valores, é 1, ou seja, 1 é "quer mover" e 0 é "não quer mover";

script_execute(state); // Executa o script correspondente ao estado atual do personagem;

scr_movement(); // Executa o script de movimento limpo - By: Willy (GMBR);

if (keyboard_check_pressed(key.close))
    game_end();

/*if (keyboard_check_pressed(key().damage))
    takeDamage(5);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(10, 10, script_get_name(state));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
